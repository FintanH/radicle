#!/usr/bin/env radicle
(load! (find-module-file! "prelude.rad"))
(import prelude/machine '[eval] :unqualified)

(def help
  "Default help text."
  "Radicle REPL

Type (apropos!) for a list of functions in scope.
Type (doc! '<name>) for further documentation of <name>.")

(def read-line-or-exit!
  (fn []
      (def line (get-line!))
      (if (eq? line nil)
        (exit! 0)
        line)))

(def-rec read-full
  (fn [cur]
    (fn []
      (def l (read-line-or-exit!))
      (def i (string-append cur " " l))
      (catch 'parse-error
          (read-many-annotated "[read-line-or-exit!]" i)
        (fn [_err]
          ((read-full i)))))))

(put-str! help)
(def repl
  {:name "repl"
   ;; Parse errors are thrown here
   :getter (read-full "")})

(subscribe-to! repl (fn [xs] (map print! xs)))
